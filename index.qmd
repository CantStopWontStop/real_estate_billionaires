---
title: "Real Estate Billionaires"
format:
    html:
        code-fold: true
editor: visual
execute: 
  echo: false
  warning: false
---

```{r}
library(tidyverse)
library(googlesheets4)
library(DT)
library(gt)
library(gtExtras)
library(leaflet)
```

```{r}
afromation_cols <- c("#2E2E2E", "#2b6144","#842c1d", "#CDBC88","#4f839e", "#bccbf3", "#e4e4e4"
)

theme_set(theme_minimal())
```

```{r}
#| column: screen-inset
data_raw <- googlesheets4::read_sheet('https://docs.google.com/spreadsheets/d/1ICjbS8SRTXU4VpcypX9Owot3RtCkByDu3sNh0n8Q6-o/edit#gid=0')|> 
    select(Name, 
           `Net Worth`, 
           Age, 
           Race, 
           Gender,
           Religion, 
           `Education Level`,
           City, 
           State,
           Country,
           `Head Shot`, 
           Latitude,
           Longitude)

data_raw <- data_raw |> 
    mutate(`net_worth_dollar` =  scales::label_dollar()(data_raw$`Net Worth`)) 

data_raw |> 
  select(-`Head Shot`, -Latitude, -Longitude) |> 
  DT::datatable()



```

```{r}

data_raw |> 
    mutate(
        religion = case_when(
            Religion == 'Catholic' ~ 'cross',
            Religion |> str_detect('Jewish') ~ 'star-of-david',
            Religion == 'Unknown' ~ 'question',
            TRUE ~ NA),
        gender  = case_when(
            Gender == 'Male'~'mars',
            TRUE ~'venus'
            )
        ) |> 
    select(Name, 
           Age, Race, 
           gender, religion, 
           `Net Worth`,
           net_worth_dollar) |>
    gt() |> 
    gt_fa_column(religion) |> 
    gt_fa_column(gender) |>
    gt_plt_bar(column = `Net Worth`, 
               color = '#34713e') |> 
    cols_width(
        `Net Worth` ~ px(200),
        contains('icon') ~px(20)) |> 
    gt_theme_espn()
```

```{r}

data_raw$Gender <- factor(data_raw$Gender, levels = c("Male", "Female"))

data_raw$`Education Level` <- factor(data_raw$`Education Level`, levels = c("High School", "Bachelors", "Masters", "Doctorate"))


plot_bars <- function(data, group, sort_by = "count") {
  if (sort_by == "count") {
    data %>%
      group_by(!!sym(group)) %>%
      summarise(Count = n()) %>%
      arrange(desc(Count)) %>%
      ggplot(aes(y = reorder(!!sym(group), Count), x = Count, fill = !!sym(group))) +
      geom_col() +
      scale_fill_manual(values = afromation_cols) +
      labs(y = group, fill = glue::glue('{group}'))+
      theme(legend.position = 'top',
            text = element_text(size = 16), 
            axis.title.x = element_blank(),
            legend.title = element_blank())
  } else if (sort_by == "factor") {
    data %>%
      group_by(!!sym(group)) %>%
      summarise(Count = n()) %>%
      ggplot(aes(y = reorder(!!sym(group), Count), x = Count, fill = !!sym(group))) +
      geom_col() +
      scale_fill_manual(values = afromation_cols) +
      labs(y = group, fill = glue::glue('{group}')) +
      theme(legend.position = 'top',
            text = element_text(size = 16), 
            axis.title.x = element_blank(),
            legend.title = element_blank())
  } else {
    stop("Invalid value for 'sort_by'. Use 'count' or 'factor'.")
  }
}

plot_bars(data = data_raw, group = "Gender", sort_by = "count")


plot_bars(data = data_raw, group = "Religion")

plot_bars(data = data_raw, group = "Race", sort_by = "factor")

data_raw |>
    group_by(`Education Level`) |> 
    summarise(Count = n()) |> 
    arrange(Count |> desc()) |> 
    ggplot2::ggplot(aes(y= `Education Level`, x = Count, fill = `Education Level`)) +
    geom_col() +
  scale_fill_manual(values = afromation_cols) +
    theme_minimal()+
      theme(legend.position = 'top',
            text = element_text(size = 16), 
            axis.title.x = element_blank(),
            legend.title = element_blank())
```

```{r}
leaflet(data_raw) %>%
  addTiles() %>%
  addMarkers(
    lat = ~Latitude,
    lng = ~Longitude,
    label = ~glue::glue('{Name} | {City}')
  ) %>%
  addProviderTiles("Stadia.StamenWatercolor")
```
